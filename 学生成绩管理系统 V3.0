#include<stdio.h>
#include<string.h>
/*
200210422 Liang 100 100 100
200210423 Du 0 0.5 0
200210424 Paul 60 70.5 75
200210425 David 70.5 72 78
200210322 Harry 52 80.5 73.5
200210114 Ronald 88.5 92 70
200210235 Celine 92 85.5 89
200210522 Eva 64 46 60.5
200110516 Lily 71.5 55 91.5
200111103 Jesse 94 87 72.5
*/
void PRINT(char *pna[],float score[][6],int num[],int n,int N);
void ReadScore(char *pna[],char name[][20],float score[][6],int num[],int n,int N);
float Average(float score[][6],int j,int n);
void Fun(char *pna[],float score[][6],int num[],int n,int N,int (*f)(int a,int b));
void Funn(char *pna[],int num[],float score[][6],int n,int N,int (*f)(int a,int b));
int LowScore(float a,float b);
int HighScore(float a,float b);
int Search(int a,int num[],int n);
void NameStrcmp(char *pna[],float score[][6],int num[],int n,int N);
int NameSearch(char NAM[],char *pna[],int n);
void Analyse(float score[][6],int j,int n);

int main()
{
    printf("Number:200210422\n");
    printf("Name:梁浩辉\n");
    printf("Subject No.7\n");
    printf("1. Input record\n");
    printf("2. Calculate average score of course\n");
    printf("3. Calculate total and average score of every student\n");
    printf("4. Sort in descending order by total score of every student\n");
    printf("5. Sort in ascending order by total score of every student\n");
    printf("6. Sort in ascending order by student's ID\n");
    printf("7. Sort in dictionary order by name\n7. Search by student's ID\n");
    printf("8. Search by student's ID\n");
    printf("9. Search by name\n");
    printf("10.Statistic analysis for every course\n");
    printf("11.List record\n");
    printf("12.Exit\nPlease enter your choice:");
    int choice=0,n,N,num[30],ID,IF,i,j;
    char name[30][20],*pna[30],NAM[20];
    float sum,aver,score[30][6];
    while(choice!=12)
    {
        scanf("%d",&choice);
        switch (choice)
        {
        case 1:
            printf("How many students?(<=30)\n");
            scanf("%d",&n);
            while(!(n>=1&&n<=30))
            {
                printf("Wrong input! Please try again.\n");
                scanf("%d",&n);
            }
            printf("How many courses?(<=6)\n");
            scanf("%d",&N);
            while(!(N>=1&&N<=6))
            {
                printf("Wrong input! Please try again.\n");
                scanf("%d",&N);
            }
            printf("Please input name, student's ID and score, format as 200210422 Liang 100 100 100\n");
            ReadScore(pna,name,score,num,n,N);
            printf("Success!\n");
            break;
        case 2:
            for(j=0; j<N; j++)
            {
                aver=Average(score,j,n);
                printf("Average score of course%d is %.2f\n",j+1,aver);
            }
            break;
        case 3:
            printf("       ID       Name    Total Score  Average Score\n");
            printf("--------------------------------------------------\n");
            for(i=0; i<n; i++)
            {
                sum=0;
                for(j=0; j<N; j++)
                    sum+=score[i][j];
                aver=sum/N;
                printf("%d %10s %14.2f %14.2f\n",num[i],pna[i],sum,aver);
            }
            break;
        case 4:
            Fun(pna,score,num,n,N,HighScore);
            PRINT(pna,score,num,n,N);
            break;
        case 5:
            Fun(pna,score,num,n,N,LowScore);
            PRINT(pna,score,num,n,N);
            break;
        case 6:
            Funn(pna,num,score,n,N,LowScore);
            PRINT(pna,score,num,n,N);
            break;
        case 7:
            NameStrcmp(pna,score,num,n,N);
            PRINT(pna,score,num,n,N);
            break;
        case 8:
            Fun(pna,score,num,n,N,HighScore);
            printf("ID:");
            scanf("%d",&ID);
            IF=Search(ID,num,n);
            if(IF==-1)
                printf("No Found.\n");
            else
            {
                for(j=0; j<N; j++)
                    printf("Course%d:%.2f\n",j+1,score[IF][j]);
                printf("Ranking:%d\n",IF+1);
            }
            break;
        case 9:
            Fun(pna,score,num,n,N,HighScore);
            printf("Name:");
            getchar();
            gets(NAM);
            IF=NameSearch(NAM,pna,n);
            if(IF==-1)
                printf("No Found.\n");
            else
            {
                for(j=0; j<N; j++)
                    printf("Course%d:%.2f\n",j+1,score[IF][j]);
                printf("Ranking:%d\n",IF+1);
            }
            break;
        case 10:
            for(j=0; j<N; j++)
            {
                printf("Course%d:\n",j+1);
                Analyse(score,j,n);
            }
            break;
        case 11:
            PRINT(pna,score,num,n,N);
            break;
        }
    }
    return 0;
}

void ReadScore(char *pna[],char name[][20],float score[][6],int num[],int n,int N)
{
    int i,j;
    for(i=0; i<n; i++)
    {
        scanf("%d %s",&num[i],name[i]);
        pna[i]=name[i];
        for(j=0; j<N; j++)
            scanf(" %f",&score[i][j]);
    }
}

float Average(float score[][6],int j,int n)
{
    int i;
    float sum=0;
    for(i=0; i<n; i++)
        sum+=score[i][j];
    return sum/n;
}

void Fun(char *pna[],float score[][6],int num[],int n,int N,int (*f)(int a,int b))
{
    int i,j,k,m,temp;
    float sum[30],te;
    char *tem=NULL;
    for(i=0; i<n; i++)
    {
        sum[i]=0;
        for(j=0; j<N; j++)
            sum[i]+=score[i][j];
    }
    for(i=0; i<n-1; i++)
    {
        k=i;
        for(j=i+1; j<n; j++)
        {
            if((*f)(sum[k],sum[j]))
                k=j;
        }
        if(k!=i)
        {
            for(m=0; m<N; m++)
            {
                te=score[k][m];
                score[k][m]=score[i][m];
                score[i][m]=te;
            }
            te=sum[k];
            sum[k]=sum[i];
            sum[i]=te;
            temp=num[k];
            num[k]=num[i];
            num[i]=temp;
            tem=pna[k];
            pna[k]=pna[i];
            pna[i]=tem;
        }
    }
}

void Funn(char *pna[],int num[],float score[][6],int n,int N,int (*f)(int a,int b))
{
    int i,j,k,m,temp;
    float te;
    char *tem=NULL;
    for(i=0; i<n-1; i++)
    {
        k=i;
        for(j=i+1; j<n; j++)
        {
            if((*f)(num[k],num[j]))
                k=j;
        }
        if(k!=i)
        {
            for(m=0; m<N; m++)
            {
                te=score[k][m];
                score[k][m]=score[i][m];
                score[i][m]=te;
            }
            temp=num[k];
            num[k]=num[i];
            num[i]=temp;
            tem=pna[k];
            pna[k]=pna[i];
            pna[i]=tem;
        }
    }
}

int HighScore(float a,float b)
{
    return a<b;
}

int LowScore(float a,float b)
{
    return a>b;
}

int Search(int a,int num[],int n)
{
    int i;
    for(i=0; i<n; i++)
    {
        if(num[i]==a)
            return i;
    }
    return -1;
}

void PRINT(char *pna[],float score[][6],int num[],int n,int N)
{
    int i,j;
    printf("       ID       Name");
    for(i=0; i<N; i++)
        printf("        Course%d",i+1);
    printf("\n-----------------------");
    for(i=0; i<N; i++)
        printf("--------------",i+1);
    printf("\n");
    for(i=0; i<n; i++)
    {
        printf("%d %10s",num[i],pna[i]);
        for(j=0; j<N; j++)
            printf(" %14.2f",score[i][j]);
        printf("\n");
    }
}

void NameStrcmp(char *pna[],float score[][6],int num[],int n,int N)
{
    int i,j,m,temp;
    float te;
    char *tem=NULL;
    for(i=0; i<n-1; i++)
    {
        for(j=i+1; j<n; j++)
        {
            if(strcmp(pna[i],pna[j])>0)
            {
                for(m=0; m<N; m++)
                {
                    te=score[j][m];
                    score[j][m]=score[i][m];
                    score[i][m]=te;
                }
                temp=num[j];
                num[j]=num[i];
                num[i]=temp;
                tem=pna[j];
                pna[j]=pna[i];
                pna[i]=tem;
            }
        }
    }
}

int NameSearch(char NAM[],char *pna[],int n)
{
    int i;
    for(i=0; i<n; i++)
    {
        if(strcmp(pna[i],NAM)==0)
            return i;
    }
    return -1;
}

void Analyse(float score[][6],int j,int n)
{
    int i,a=0,b=0,c=0,d=0,e=0;
    for(i=0; i<n; i++)
    {
        if(score[i][j]>=90)
            a++;
        if(score[i][j]>=80&&score[i][j]<90)
            b++;
        if(score[i][j]>=70&&score[i][j]<80)
            c++;
        if(score[i][j]>=60&&score[i][j]<70)
            d++;
        if(score[i][j]<60)
            e++;
    }
    printf("优秀:%d人 %.0f%%\n",a,((float)a/n)*100);
    printf("良好:%d人 %.0f%%\n",b,((float)b/n)*100);
    printf("中等:%d人 %.0f%%\n",c,((float)c/n)*100);
    printf("及格:%d人 %.0f%%\n",d,((float)d/n)*100);
    printf("不及格:%d人 %.0f%%\n",e,((float)e/n)*100);
}
