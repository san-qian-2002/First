#include<stdio.h>
#include<string.h>
#include<stdlib.h>
/*20190003 Carlos 78 65 89 66 45
20190008 Henry 54 88 32 56 0
201900011 Ken 98 93 94 89 82
20190005 Edison 88 76 88 90 77
20190002 Bruce 66 56 89 99 76
20190009 Isaac 45 56 74 59 49
20190001 Alex 92 90 88 76 84
20190004 David 64 68 69 74 80
201900012 Larry 77 89 0 83 59
20190007 Gino 99 98 91 86 79
201900010 Jack 69 78 83 79 66
20190006 Frank 73 45 71 45 68*/
typedef struct student//定义结构体
{
    long num;//学号
    char name[20];//名字
    float score[6];//单科成绩
    float sum;//总分
    float average;//平均分
} STUDENT;

int n,N;//定义人数和科目数

int ReadScore(STUDENT *s)//读入学生信息
{
    int i,j;
    for(i=0; i<n; i++)
    {
        scanf("%ld %s",&s[i].num,s[i].name);
        for(j=0; j<N; j++)
            scanf(" %f",&s[i].score[j]);
    }
    for(i=0; i<n; i++)
    {
        for(j=0; j<N; j++)
        {
            if(s[i].score[j]<0)
            {
                printf("%s's score of Course %d input wrong.Please input it again.\n",s[i].name,j+1);
                scanf("%f",&s[i].score[j]);
            }
        }
    }
    for(i=0; i<n; i++)
    {
        s[i].sum=0;
        for(j=0; j<N; j++)
            s[i].sum+=s[i].score[j];
        s[i].average=s[i].sum/N;
    }
    return 1;
}

float SUM(STUDENT *s,int j)//计算单科总分
{
    int i;
    float sum=0;
    for(i=0; i<n; i++)
        sum+=s[i].score[j];
    return sum;
}

void Sort(STUDENT *s,int (*f)(float a,float b))//根据总分排序
{
    int i,j,k;
    STUDENT temp;
    for(i=0; i<n-1; i++)
    {
        k=i;
        for(j=i+1; j<n; j++)
        {
            if((*f)(s[k].sum,s[j].sum))
                k=j;
        }
        if(k!=i)//交换数据
        {
            temp=s[k];
            s[k]=s[i];
            s[i]=temp;
        }
    }
}

void SortNum(STUDENT *s)//根据学号排序
{
    int i,j,k;
    STUDENT temp;
    for(i=0; i<n-1; i++)
    {
        k=i;
        for(j=i+1; j<n; j++)
        {
            if(s[k].num>s[j].num)
                k=j;
        }
        if(k!=i)
        {
            temp=s[k];
            s[k]=s[i];
            s[i]=temp;
        }
    }
}

int HighScore(float a,float b)//降序排列
{
    return a<b;
}

int LowScore(float a,float b)//升序排列
{
    return a>b;
}

int NumSearch(long a,STUDENT *s)//名字搜索
{
    int i;
    for(i=0; i<n; i++)
    {
        if(s[i].num==a)
            return i;
    }
    return -1;//没有找到返回-1
}

void PRINT(STUDENT *s)//打印序号、学号、名字和单科成绩
{
    int i,j;
    printf("No.            ID        Name          Sum         Average");
    for(i=0; i<N; i++)
        printf("        Course%d",i+1);
    printf("\n----------------------------------------------------------------");
    for(i=0; i<N; i++)
        printf("--------------",i+1);
    printf("\n");
    for(i=0; i<n; i++)
    {
        if(i<9)
            printf("%d   %14ld %10s",i+1,s[i].num,s[i].name);
        else
            printf("%d  %14ld %10s",i+1,s[i].num,s[i].name);
        printf("%14.2f%14.2f",s[i].sum,s[i].average);
        for(j=0; j<N; j++)
            printf(" %14.2f",s[i].score[j]);
        printf("\n");
    }
}

void NameStrcmp(STUDENT *s)//按字典顺序排列
{
    int i,j,k;
    STUDENT temp;
    for(i=0; i<n-1; i++)
    {
        k=i;
        for(j=i+1; j<n; j++)
        {
            if(strcmp(s[k].name,s[j].name)>0)
                k=j;
        }
        if(k!=i)
        {
            temp=s[k];
            s[k]=s[i];
            s[i]=temp;
        }
    }
}

int NameSearch(char NAM[],STUDENT *s)//名字搜索
{
    int i;
    for(i=0; i<n; i++)
    {
        if(strcmp(s[i].name,NAM)==0)
            return i;
    }
    return -1;
}

void Analyse(STUDENT *s,int j)//成绩分析，输出分数段百分比
{
    int i,a=0,b=0,c=0,d=0,e=0;
    for(i=0; i<n; i++)
    {
        if(s[i].score[j]>=90)
            a++;
        if(s[i].score[j]>=80&&s[i].score[j]<90)
            b++;
        if(s[i].score[j]>=70&&s[i].score[j]<80)
            c++;
        if(s[i].score[j]>=60&&s[i].score[j]<70)
            d++;
        if(s[i].score[j]<60)
            e++;
    }
    printf("优秀:%d人 %.0f%%\n",a,((float)a/n)*100);
    printf("良好:%d人 %.0f%%\n",b,((float)b/n)*100);
    printf("中等:%d人 %.0f%%\n",c,((float)c/n)*100);
    printf("及格:%d人 %.0f%%\n",d,((float)d/n)*100);
    printf("不及格:%d人 %.0f%%\n",e,((float)e/n)*100);
}

int WriteFile(STUDENT *s)//写入文件
{
    FILE *fp;
    int i,j;
    if((fp=fopen("scores.txt","w"))==NULL)
    {
        printf("Failure to open output.txt!\n");
        return 0;
    }
    else
    {
        fprintf(fp,"Students:%d\tCourses:%d\n",n,N);
        for(i=0; i<n; i++)
        {
            fprintf(fp,"%12ld\t%10s\t",s[i].num,s[i].name);
            for(j=0; j<N; j++)
            {
                fprintf(fp,"%10.2f\t",s[i].score[j]);
            }
            fprintf(fp,"%10.2f\t%10.2f\n",s[i].sum,s[i].average);
        }
        return 1;
    }
    fclose(fp);
}

int ReadFile(STUDENT *s)//读取文件
{
    FILE *fp;
    int i,j;
    if((fp=fopen("scores.txt","r"))==NULL)
    {
        printf("Failure to open output.txt!\n");
        return 0;
    }
    else
    {
        fscanf(fp,"Students:%d\tCourses:%d\n",&n,&N);
        for(i=0; i<n; i++)
        {
            fscanf(fp,"%ld",&s[i].num);
            fscanf(fp,"%s",s[i].name);
            for(j=0; j<N; j++)
            {
                fscanf(fp,"%f",&s[i].score[j]);
            }
            fscanf(fp,"%f",&s[i].sum);
            fscanf(fp,"%f",&s[i].average);
        }
        return 1;
    }
    fclose(fp);
}

int main()
{
    printf("Number:200210422\n");
    printf("Name:梁浩辉\n");
    printf("Subject No.9\n");
    printf("1. Input record\n");
    printf("2. Calculate average score of course\n");
    printf("3. Calculate total and average score of every student\n");
    printf("4. Sort in descending order by total score of every student\n");
    printf("5. Sort in ascending order by total score of every student\n");
    printf("6. Sort in ascending order by student's ID\n");
    printf("7. Sort in dictionary order by name\n");
    printf("8. Search by student's ID\n");
    printf("9. Search by name\n");
    printf("10.Statistic analysis for every course\n");
    printf("11.List record\n");
    printf("12.Write to a file and exit\n");
    printf("13.Read from a file\n");
    printf("14.Exit\nPlease enter your choice:");
    int choice=0,IF,i,j,R=0;//定义选择变量，判断是否搜索成功的变量，两个遍历变量，判断是否已经录入的变量
    long ID;//定义学号搜索值
    char NAM[30],str[9999];//定义名字搜索值
    STUDENT stu[30],stu2[30];//键盘读入学生数据，文件读入学生数据
    while(choice!=14)//14时退出
    {

        scanf("%d",&choice);
        while(choice<=0||choice>14)//错误输入
        {
            printf("Please choose again.\n");
            scanf("%d",&choice);
        }
        switch (choice)
        {
        case 1://录入
            printf("How many students?(<=30)\n");
            scanf("%d",&n);
            while(!(n>=1&&n<=30))//超出范围数据
            {
                printf("Wrong input! Please try again.\n");
                scanf("%d",&n);
            }
            printf("How many courses?(<=6)\n");
            scanf("%d",&N);
            while(!(N>=1&&N<=6))//超出范围数据
            {
                printf("Wrong input! Please try again.\n");
                scanf("%d",&N);
            }
            printf("Please input name, student's ID and score, format as 200210422 Liang 100 100 100\n");
            R=ReadScore(stu);//成功录入
            printf("Success!\n");
            break;
        case 2://计算每门课程的总分和平均分
            if(R==0)//判断是否已录入
            {
                printf("Please input record first.\n");
                break;
            }
            for(j=0; j<N; j++)
            {
                float sum=SUM(stu,j);
                float aver=sum/n;
                printf("Total score of course%d is %.2f  ",j+1,sum);
                printf("Average score of course%d is %.2f\n",j+1,aver);
            }
            break;
        case 3://)计算每个学生的总分和平均分
            if(R==0)
            {
                printf("Please input record first.\n");
                break;
            }
            printf("            ID       Name    Total Score  Average Score\n");
            printf("-------------------------------------------------------\n");
            for(i=0; i<n; i++)
                printf("%14ld %10s %14.2f %14.2f\n",stu[i].num,stu[i].name,stu[i].sum,stu[i].average);
            break;
        case 4://按每个学生的总分由高到低排出名次表
            if(R==0)
            {
                printf("Please input record first.\n");
                break;
            }
            Sort(stu,HighScore);
            PRINT(stu);
            break;
        case 5://按每个学生的总分由高到低排出名次表
            if(R==0)
            {
                printf("Please input record first.\n");
                break;
            }
            Sort(stu,LowScore);
            PRINT(stu);
            break;
        case 6://)按学号由小到大排出成绩表
            if(R==0)
            {
                printf("Please input record first.\n");
                break;
            }
            SortNum(stu);
            PRINT(stu);
            break;
        case 7://按姓名的字典顺序排出成绩表
            if(R==0)
            {
                printf("Please input record first.\n");
                break;
            }
            NameStrcmp(stu);
            PRINT(stu);
            break;
        case 8://按学号查询学生排名及其各科考试成绩
            if(R==0)
            {
                printf("Please input record first.\n");
                break;
            }
            Sort(stu,HighScore);
            printf("ID:");
            scanf("%d",&ID);
            IF=NumSearch(ID,stu);
            if(IF==-1)
                printf("No Found.\n");//无匹配
            else
            {
                printf("Name:%s\n",stu[IF].name);
                for(j=0; j<N; j++)
                    printf("Course%d:%.2f\n",j+1,stu[IF].score[j]);
                printf("Ranking:%d\n",IF+1);
            }
            break;
        case 9://按姓名查询学生排名及其各科考试成绩
            if(R==0)
            {
                printf("Please input record first.\n");
                break;
            }
            Sort(stu,HighScore);
            printf("Name:");
            getchar();
            gets(NAM);
            IF=NameSearch(NAM,stu);
            if(IF==-1)
                printf("No Found.\n");
            else
            {
                printf("ID:%ld\n",stu[IF].num);
                for(j=0; j<N; j++)
                    printf("Course%d:%.2f\n",j+1,stu[IF].score[j]);
                printf("Ranking:%d\n",IF+1);
            }
            break;
        case 10://按优秀（90-100分）、良好（80-89分）、中等（70-79分）、及格（60 -69分）、不及格(0-59分)5个类别，对每门课程分别统计每个类别的人数以及所占的百分比
            if(R==0)
            {
                printf("Please input record first.\n");
                break;
            }
            for(j=0; j<N; j++)
            {
                printf("Course%d:\n",j+1);
                Analyse(stu,j);
            }
            break;
        case 11://输出每个学生的学号、姓名、各科考试成绩、总分和平均分
            if(R==0)
            {
                printf("Please input record first.\n");
                break;
            }
            PRINT(stu);
            break;
        case 12://写入文件并退出程序
            if(R==0)
            {
                printf("Please input record first.\n");
                break;
            }
            if(WriteFile(stu)==1)
                printf("Success!\n");
            exit(0);
        case 13://读取文件并输出
            if(ReadFile(stu2)==1)
                PRINT(stu2);
            break;
        }
    }
    return 0;
}

